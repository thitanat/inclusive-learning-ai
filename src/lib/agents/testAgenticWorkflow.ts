import { AgenticWorkflow } from "@/lib/agents/agenticWorkflow";

/**
 * Test file to demonstrate the agentic workflow system
 * This shows how the three agents work together to process educational tasks
 */

async function testAgenticWorkflow() {
  console.log("üß™ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Agentic Workflow");
  console.log("=" .repeat(50));

  const workflow = new AgenticWorkflow();

  // Test Case 1: Simple curriculum query (should use document search)
  console.log("\nüìö ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 1: ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£");
  console.log("-".repeat(30));
  
  try {
    const result1 = await workflow.executeWorkflow({
      task: "‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏°.1 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà",
      stepType: "0",
      context: "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£",
    });

    console.log("‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå 1:");
    console.log("üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à:", result1.confidence);
    console.log("üìö ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", result1.sourcesUsed);
    console.log("üîÑ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô:", result1.processingSteps);
    console.log("üìù ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (200 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å):", result1.result.substring(0, 200) + "...");
    
  } catch (error) {
    console.error("‚ùå ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 1 ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error instanceof Error ? error.message : error);
  }

  // Test Case 2: Learning objective design (might use both document and information search)
  console.log("\nüéØ ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 2: ‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ");
  console.log("-".repeat(30));
  
  try {
    const result2 = await workflow.executeWorkflow({
      task: "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ 3 ‡∏î‡πâ‡∏≤‡∏ô ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà ‡∏°.1",
      stepType: "1",
      sessionData: {
        subject: "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
        level: "‡∏°.1",
        topic: "‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà"
      },
    });

    console.log("‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå 2:");
    console.log("üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à:", result2.confidence);
    console.log("üìö ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", result2.sourcesUsed);
    console.log("üîÑ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô:", result2.processingSteps);
    console.log("üìù ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (200 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å):", result2.result.substring(0, 200) + "...");
    
  } catch (error) {
    console.error("‚ùå ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 2 ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error instanceof Error ? error.message : String(error));
  }

  // Test Case 3: Activity design (complex task requiring multiple sources)
  console.log("\nüé≤ ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 3: ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°");
  console.log("-".repeat(30));
  
  try {
    const result3 = await workflow.executeWorkflow({
      task: "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏ö‡∏ö UDL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏ß‡∏° ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà",
      stepType: "2",
      sessionData: {
        subject: "‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
        level: "‡∏°.1",
        numStudents: 30,
        studyPeriod: 9,
        studentType: [
          { type: "‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥", percentage: 70 },
          { type: "‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©", percentage: 15 },
          { type: "‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©", percentage: 15 }
        ]
      },
    });

    console.log("‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå 3:");
    console.log("üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à:", result3.confidence);
    console.log("üìö ‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", result3.sourcesUsed);
    console.log("üîÑ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô:", result3.processingSteps);
    console.log("üìù ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå (300 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å):", result3.result.substring(0, 300) + "...");
    
  } catch (error) {
    console.error("‚ùå ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà 3 ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error instanceof Error ? error.message : String(error));
  }

  console.log("\n" + "=".repeat(50));
  console.log("üéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Agentic Workflow ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!");
}

// Export for testing
export { testAgenticWorkflow };

// Uncomment the following line to run the test when this file is executed directly
// testAgenticWorkflow().catch(console.error);
