import { NextRequest, NextResponse } from "next/server";
import { docsQuery } from "@/lib/docsQuery";
import { callAgenticQueryLLM } from "@/lib/agenticQueryLLM";
import { ObjectId } from "mongodb";
import { connectDB } from "@/lib/db";
import { getSessionById, createSession, updateSessionById } from "@/models/session";
import jwt from "jsonwebtoken";
import { extractJSON } from "@/utils/extractJSON";

/**
 * Enhanced API Route with Agentic Workflow System
 * 
 * This route now uses a multi-agent workflow system with:
 * - Task Processor Agent: Analyzes and plans task execution
 * - Document Query Agent: Searches curriculum documents intelligently  
 * - Information Search Agent: Retrieves external educational resources
 * 
 * All steps (0, 1, 2, 3) now use the agentic workflow for:
 * - Better context awareness
 * - Improved quality with confidence scoring
 * - Source tracking and transparency
 * - Enhanced error handling and fallbacks
 */

export async function POST(request: NextRequest, { params }: { params: { configStep: string } }) {
  const { configStep } = await params;
  await connectDB();
  const JWT_SECRET = process.env.JWT_SECRET || "your_jwt_secret";
  const token = request.headers.get("Authorization")?.split(" ")[1];
  if (!token) {
    return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
  }
  let userId;
  try {
    const decoded = jwt.verify(token, JWT_SECRET) as { userId: string };
    userId = decoded.userId;
  } catch {
    return NextResponse.json({ error: "Invalid token" }, { status: 401 });
  }

  try {
    const body = await request.json();
    const sessionId = body.sessionId;
    if (!sessionId) {
      return NextResponse.json({ error: "Missing sessionId" }, { status: 400 });
    }

    // Always fetch session by sessionId
    const session = await getSessionById(sessionId);
    if (!session || session.userId?.toString() !== userId) {
      return NextResponse.json({ error: "Session not found or unauthorized" }, { status: 404 });
    }

    console.log(`ü§ñ Processing config step: ${configStep} for sessionId: ${sessionId} using Agentic Workflow`);

    switch (configStep) {
      case "0": {
        console.log("üöÄ Using Agentic Workflow for step 0");
        
        const task0_0 = `
      system:
        ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV ‡πÇ‡∏î‡∏¢‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô

      human:
        ‡∏à‡∏≤‡∏Å CSV ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πÄ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏´‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞ ‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö
        ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞: ${body.subject} ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á: ${body.lessonTopic} ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: ${body.level}
        ‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡∏´‡∏ô‡∏∂‡πà‡∏á ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö json ‡πÇ‡∏î‡∏¢‡∏°‡∏µ field 
        '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ' ‡∏ã‡∏∂‡πà‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡πÉ‡∏ô value
        '‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô' ‡∏ã‡∏∂‡πà‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÉ‡∏ô value
        '‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≤‡∏á' ‡∏ã‡∏∂‡πà‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡πÉ‡∏ô value
        '‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á' ‡∏ã‡∏∂‡πà‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡πÉ‡∏ô value
        *‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á" ‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
      `;
        
        // Use agentic workflow for better task processing
        const agenticResult = await callAgenticQueryLLM(task0_0, "0_0", {
          subject: body.subject,
          lessonTopic: body.lessonTopic,
          level: body.level,
          sessionId: sessionId,
        });

        const data0_0 = agenticResult.content;
        console.log("üìä Agentic workflow confidence:", agenticResult.confidence);
        console.log("üìö Sources used:", agenticResult.sources);

        // Check for "‡πÑ‡∏°‡πà‡∏û‡∏ö" in data0_0
        if (typeof data0_0 === "string" && data0_0.includes("‡πÑ‡∏°‡πà‡∏û‡∏ö")) {
          console.log("No course data found, returning error response");
          return NextResponse.json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà" }, { status: 404 });
        }

        const response0_0 = await extractJSON(typeof data0_0 === "string" ? data0_0 : JSON.stringify(data0_0));
        const standard = response0_0["‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô"];
        const interimIndicators = response0_0["‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≤‡∏á"];
        const finalIndicators = response0_0["‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á"];
        const LearningArea = response0_0["‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏™‡∏≤‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ"];

        // Use agentic workflow for task 0_1
        const task0_1 = `‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ

        ${JSON.stringify(standard)} ‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≤‡∏á: ${JSON.stringify(interimIndicators)} ‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á: ${JSON.stringify(finalIndicators)}
        ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏¥‡∏î‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏™‡∏≤‡∏£‡∏∞‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ field ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÅ‡∏Ñ‡πà‡πÉ‡∏ä‡πâ field ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏ä‡πà‡∏ô 1,2,3,4 ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏¥‡∏î‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á" ‡πÅ‡∏•‡∏∞‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡πâ‡∏≠
        `;

        const agenticResult0_1 = await callAgenticQueryLLM(task0_1, "0_1", {
          standard: standard,
          interimIndicators: interimIndicators,
          finalIndicators: finalIndicators,
          sessionId: sessionId,
        });

        const data0_1 = agenticResult0_1.content;
        const response0_1 = await extractJSON(typeof data0_1 === "string" ? data0_1 : JSON.stringify(data0_1));

        // Use agentic workflow for task 0_2
        const task0_2 = `‡∏à‡∏≤‡πà‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏™‡∏≤‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ ${JSON.stringify(response0_1)} ‡πÉ‡∏´‡πâ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏≤‡∏£‡∏∞‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î ‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ö‡∏ó‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡πÇ‡∏î‡∏¢‡∏°‡∏µ field ‡πÄ‡∏õ‡πá‡∏ô "‡∏™‡∏≤‡∏£‡∏∞‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç" ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡∏∏‡∏õ‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏≤‡∏£‡∏∞‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á" `
        
        const agenticResult0_2 = await callAgenticQueryLLM(task0_2, "0_2", {
          content: response0_1,
          sessionId: sessionId,
        });

        const data0_2 = agenticResult0_2.content;
        const response0_2 = await extractJSON(typeof data0_2 === "string" ? data0_2 : JSON.stringify(data0_2));
        
        const response0 = {
          ...response0_0,
          "‡∏™‡∏≤‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ": response0_1,
          ...response0_2,
        };

        await updateSessionById(sessionId, {
          configStep: parseInt(configStep) + 1,
          subject: body.subject,
          lessonTopic: body.lessonTopic,
          learningArea: LearningArea,
          level: body.level,
          standard: standard,
          interimIndicators: interimIndicators,
          finalIndicators: finalIndicators,
          content: response0_1,
          keyContent: response0_2
        });

        console.log("‚úÖ Agentic workflow step 0 completed successfully");
        console.log("üîÑ Total processing confidence:", 
          (agenticResult.confidence + agenticResult0_1.confidence + agenticResult0_2.confidence) / 3);

        return NextResponse.json({
          response: response0,
          agenticMetadata: {
            confidence: (agenticResult.confidence + agenticResult0_1.confidence + agenticResult0_2.confidence) / 3,
            sourcesUsed: [...new Set([
              ...agenticResult.sources, 
              ...agenticResult0_1.sources, 
              ...agenticResult0_2.sources
            ])],
            processingSteps: [
              ...agenticResult.processingSteps,
              ...agenticResult0_1.processingSteps,
              ...agenticResult0_2.processingSteps,
            ],
          }
        });
      }
      case "1": {
        console.log("üöÄ Using Agentic Workflow for step 1");
        
        const intervalIndicators = session.interimIndicators;
        const finalIndicators = session.finalIndicators;

        const task1_0 = `‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ 3 ‡∏î‡πâ‡∏≤‡∏ô‡πÇ‡∏î‡∏¢‡∏°‡∏µ ‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ, ‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞ ‡πÅ‡∏•‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞
        ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡∏ä‡∏≤: ${session.subject} ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤: ${session.content} ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô: ${session.level} ‡πÇ‡∏î‡∏¢‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î ${intervalIndicators} ‡πÅ‡∏•‡∏∞ ${finalIndicators}
        ‡πÇ‡∏î‡∏¢‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢ field
        "‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ", "‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡∏Å‡∏©‡∏∞", "‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞" ‡πÇ‡∏î‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞ field ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á`;

        // Use agentic workflow for better objective design
        const agenticResult1_0 = await callAgenticQueryLLM(task1_0, "1_0", {
          subject: session.subject,
          content: session.content,
          level: session.level,
          intervalIndicators: intervalIndicators,
          finalIndicators: finalIndicators,
          sessionId: sessionId,
        });

        const data1_0 = agenticResult1_0.content;
        console.log("üìä Agentic workflow confidence (step 1):", agenticResult1_0.confidence);
        console.log("üìö Sources used (step 1):", agenticResult1_0.sources);

        const response1_0 = await extractJSON(typeof data1_0 === "string" ? data1_0 : JSON.stringify(data1_0));

        const keyCompetencies = {
          "5.1": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£",
          "5.2": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î",
          "5.3": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
          "5.4": "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï",
        };

        await updateSessionById(sessionId, {
          configStep: parseInt(configStep) + 1,
          objectives: response1_0,
          keyCompetencies: keyCompetencies,
        });

        const response1 = {
          "‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ": response1_0,
          "‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô": keyCompetencies,
        };

        console.log("‚úÖ Agentic workflow step 1 completed successfully");

        return NextResponse.json({
          response: response1,
          agenticMetadata: {
            confidence: agenticResult1_0.confidence,
            sourcesUsed: agenticResult1_0.sources,
            processingSteps: agenticResult1_0.processingSteps,
          }
        });
      }
      case "2": {
        const numStudents = body.numStudents || 30;
        const studentType = body.studentType || [];
        const studyPeriod = body.studyPeriod || 9;
        const studentTypesStr = studentType.length > 0
          ? studentType.map(
              (s: any, idx: number) =>
                `‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà ${idx + 1}: ${s.type} (${s.percentage}%)`
            ).join(", ")
          : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô";

        const task2_0 = `‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏ö‡∏ö UDL ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏≥‡∏ô‡∏∂‡∏á‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á (Inclusive Classroom)
                          ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏ä‡∏¥‡∏á‡∏•‡∏∂‡∏Å‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
                          ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 8 ‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏•‡∏∂‡∏Å‡∏ï‡∏≤‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ‡πÄ‡∏ä‡πà‡∏ô 8.1, 8.1.1 ‡∏Ø‡∏•‡∏Ø

                          JSON ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á:
                          - ‡∏Ç‡∏±‡πâ‡∏ô (‡πÄ‡∏ä‡πà‡∏ô: ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô, ‡∏à‡∏±‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ)
                            - ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
                              - ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏±‡πâ‡∏ô)
                                - ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå (‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î)
                                - ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡πÄ‡∏ß‡∏•‡∏≤)
                                    - ‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å ‡πÅ‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡πÇ‡∏î‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î (‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏Å ‡πÅ‡∏•‡∏∞ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏¢‡πà‡∏≠‡∏¢)
                                    ‡πÄ‡∏ä‡πà‡∏ô:
                                      - ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á: ‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ß‡∏±‡∏™‡∏î‡∏∏ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
                                      - ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏†‡∏¥‡∏õ‡∏£‡∏≤‡∏¢: ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏†‡∏¥‡∏õ‡∏£‡∏≤‡∏¢‡πÄ‡∏ä‡∏¥‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
                                      - ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå: ‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏î ‡πÄ‡∏ä‡πà‡∏ô Design Thinking ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ü‡∏™
                                - ‡∏™‡∏∑‡πà‡∏≠/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ (‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÅ‡∏•‡∏∞‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
                                - ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                                - ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏Ñ‡∏£‡∏π
                                - ‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (inclusive classroom)
                                    - ‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ: ${studentTypesStr}
                          ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:
                          - ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤: ${JSON.stringify(session.content)}
                          - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô: ${50*studyPeriod} ‡∏ô‡∏≤‡∏ó‡∏µ
                          **‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏á‡πà‡∏≤‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û/‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏≥‡∏®‡∏±‡∏û‡∏ó‡πå ‡πÄ‡∏ß‡πâ‡∏ô‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏≤‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‚Äù ‡∏´‡∏£‡∏∑‡∏≠ ‚Äú‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡πÅ‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏£‡∏¥‡∏á‚Äù
                          **‡∏ó‡∏∏‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏™‡∏≤‡∏£‡∏∞‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡πà‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå ‡∏ï‡∏≤‡∏° Bloom‚Äôs Taxonomy ‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏Å‡∏ï‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡πÅ‡∏£‡∏á, ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏•‡πÑ‡∏Å, ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå‡∏à‡∏£‡∏¥‡∏á
`;
        const data2_0 = await callAgenticQueryLLM(task2_0, "2_0", {
          subject: session.subject,
          content: session.content,
          level: session.level,
          numStudents: numStudents,
          studentType: studentType,
          studyPeriod: studyPeriod,
          studentTypesStr: studentTypesStr,
          sessionId: sessionId,
        });

        const agenticResult2_0 = data2_0;
        console.log("üìä Agentic workflow confidence (step 2-0):", agenticResult2_0.confidence);
        console.log("üìö Sources used (step 2-0):", agenticResult2_0.sources);

        const response2_0 = await extractJSON(typeof agenticResult2_0.content === "string" ? agenticResult2_0.content : JSON.stringify(agenticResult2_0.content));

        const task2_1 = `‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÑ‡∏ß‡πâ ${JSON.stringify(response2_0)} ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏™‡∏∑‡πà‡∏≠/‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå/‡πÅ‡∏´‡∏•‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ field ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÅ‡∏Ñ‡πà‡πÉ‡∏ä‡πâ field ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡πÄ‡∏ä‡πà‡∏ô 1,2,3,4`;
        
        const data2_1 = await callAgenticQueryLLM(task2_1, "2_1", {
          lessonPlan: response2_0,
          sessionId: sessionId,
        });

        const agenticResult2_1 = data2_1;
        console.log("üìä Agentic workflow confidence (step 2-1):", agenticResult2_1.confidence);
        console.log("üìö Sources used (step 2-1):", agenticResult2_1.sources);

        const response2_1 = await extractJSON(typeof agenticResult2_1.content === "string" ? agenticResult2_1.content : JSON.stringify(agenticResult2_1.content));

        await updateSessionById(sessionId, {
          configStep: parseInt(configStep) + 1,
          studyPeriod: studyPeriod || 1,
          numStudents: numStudents,
          studentType: studentType,
          lessonPlan: response2_0,
          teachingMaterials: response2_1,
        });

        console.log("‚úÖ Agentic workflow step 2 completed successfully");
        console.log("üîÑ Combined processing confidence:", 
          (agenticResult2_0.confidence + agenticResult2_1.confidence) / 2);

        return NextResponse.json({
          response: response2_0,
          teachingMaterials: response2_1,
          agenticMetadata: {
            confidence: (agenticResult2_0.confidence + agenticResult2_1.confidence) / 2,
            sourcesUsed: [...new Set([
              ...agenticResult2_0.sources, 
              ...agenticResult2_1.sources
            ])],
            processingSteps: [
              ...agenticResult2_0.processingSteps,
              ...agenticResult2_1.processingSteps,
            ],
          }
        });
      }
      case "3": {
        console.log("üöÄ Using Agentic Workflow for step 3");
        
        const task3_0 = `‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:
                              ${JSON.stringify(session.lessonPlan)}

                              ‡πÇ‡∏î‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏≤‡∏á: ${JSON.stringify(session.interimIndicators)}

                              **‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥**: 
                              - ‡πÅ‡∏ö‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏õ‡πá‡∏ô 3 ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JSON:
                                1. "‡∏ß‡∏¥‡∏ò‡∏µ‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•" (‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô: ‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ, ‡∏ß‡∏±‡∏î‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£, ‡∏ß‡∏±‡∏î‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞, ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç)
                                2. "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•" (‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö, ‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï, ‡πÅ‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ï‡∏ô‡πÄ‡∏≠‡∏á ‡∏Ø‡∏•‡∏Ø)
                                3. "‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•" (‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ ‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏î‡πâ‡∏≤‡∏ô ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ 100%)

                                -‡∏ß‡∏¥‡∏ò‡∏µ‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•
                                  -‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ
                                  -‡∏ß‡∏±‡∏î‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£
                                  -‡∏ß‡∏±‡∏î‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞
                                  -‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç                                
                                -‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•                        
                                -‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•
                                  -‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô (1-5 ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ, ‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô )
                                    -‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
                                    -‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏¢‡πà‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
                                    -‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö"‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ "100%" ‡πÇ‡∏î‡∏¢‡∏≠‡∏≤‡∏à‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ
                         
                              ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        `;

        // Use agentic workflow for evaluation design
        const agenticResult3_0 = await callAgenticQueryLLM(task3_0, "3_0", {
          lessonPlan: session.lessonPlan,
          interimIndicators: session.interimIndicators,
          sessionId: sessionId,
        });

        const data3_0 = agenticResult3_0.content;
        console.log("üìä Agentic workflow confidence (step 3):", agenticResult3_0.confidence);
        console.log("üìö Sources used (step 3):", agenticResult3_0.sources);

        const response3_0 = await extractJSON(typeof data3_0 === "string" ? data3_0 : JSON.stringify(data3_0));

        await updateSessionById(sessionId, {
          configStep: parseInt(configStep) + 1,
          evaluation: response3_0,
        });

        console.log("‚úÖ Agentic workflow step 3 completed successfully");

        return NextResponse.json({
          response: response3_0,
          agenticMetadata: {
            confidence: agenticResult3_0.confidence,
            sourcesUsed: agenticResult3_0.sources,
            processingSteps: agenticResult3_0.processingSteps,
          }
        });
      }
    }
  } catch (error) {
    return NextResponse.json(
      { error: "Invalid request body" },
      { status: 400 }
    );
  }
}


